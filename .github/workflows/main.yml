# A descriptive name for your workflow
name: Build and Push Merged Docker Image

# This section controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the "main" branch
  push:
    branches: [ "main" ]
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow is made up of one or more jobs
jobs:
  build-and-push:
    # This specifies the runner type. It's configured to use your self-hosted runner.
    runs-on: [self-hosted, Linux, X64]

    # Steps represent the sequence of tasks for the job
    steps:
      # Step 1: Checks-out your repository code so the runner can use it
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Set up Docker Buildx for advanced features like caching
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Logs in to Docker Hub using secrets
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 4: Builds the Docker image and pushes it to your Docker Hub account
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          # This creates a dynamic tag using your Docker Hub username and the repo name
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest
          # This enables caching to and from the registry to speed up subsequent builds
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:buildcache,mode=max
